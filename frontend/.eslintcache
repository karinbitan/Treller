[{"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\index.js":"1","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\App.jsx":"3","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\TrellerApp\\TrellerApp.jsx":"4","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\MainHeader\\MainHeader.jsx":"5","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\boardService.js":"6","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardPreview\\index.js":"7","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardPreview\\CardPreview.jsx":"8","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\userSercvice.js":"9","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\index.js":"10","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\reducers\\userReducer.js":"11","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\reducers\\boardReducer.js":"12","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\boardActions.js":"13","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\userActions.js":"14","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\cardActions.js":"15","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\cardService.js":"16","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\eventBusService.js":"17","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\reducers\\cardReducer.js":"18","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardComments\\CardComments.jsx":"19","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\ListPreview\\ListPreview.jsx":"20","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\AddCard\\AddCard.jsx":"21","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\ListPreview\\index.js":"22","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\authActions.js":"23","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\authService.js":"24","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\HomePage\\index.js":"25","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\HomePage\\HomePage.jsx":"26","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\UserProfile\\UserProfile.jsx":"27","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\Login\\index.js":"28","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\Login\\Login.jsx":"29","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\HttpService.js":"30","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\Filter\\Filter.jsx":"31","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\httpService.js":"32","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\BoardHeader\\BoardHeader.jsx":"33","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\img-upload-service.js":"34","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\AddList\\AddList.jsx":"35","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardEditModal\\CardEditModal.jsx":"36","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\socketService.js":"37","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\Boards\\Boards.jsx":"38","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\CardDetails\\index.js":"39","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\CardDetails\\CardDetails.jsx":"40","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\utilService.js":"41","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardChecklists\\CardChecklists.jsx":"42","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\searchService.js":"43","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\searchActions.js":"44","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardDescription\\CardDescription.jsx":"45","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\InviteMembers\\InviteMembers.jsx":"46","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardOptions\\CardOptions.jsx":"47","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\Notifications\\Notifications.jsx":"48","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\NotificiationMsg\\NotificiationMsg.jsx":"49","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\BoardMenu\\BoardMenu.jsx":"50","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\AvatarOptions\\AvatarOptions.jsx":"51"},{"size":628,"mtime":1612358192232,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":2469,"mtime":1614074165743,"results":"55","hashOfConfig":"53"},{"size":15761,"mtime":1614200015469,"results":"56","hashOfConfig":"53"},{"size":2844,"mtime":1614182083081,"results":"57","hashOfConfig":"53"},{"size":2338,"mtime":1613996287259,"results":"58","hashOfConfig":"53"},{"size":43,"mtime":1612371711218,"results":"59","hashOfConfig":"53"},{"size":4663,"mtime":1614190112295,"results":"60","hashOfConfig":"53"},{"size":1486,"mtime":1614200224210,"results":"61","hashOfConfig":"53"},{"size":545,"mtime":1614072363855,"results":"62","hashOfConfig":"53"},{"size":808,"mtime":1611419372036,"results":"63","hashOfConfig":"53"},{"size":826,"mtime":1613391694461,"results":"64","hashOfConfig":"53"},{"size":3939,"mtime":1613841594973,"results":"65","hashOfConfig":"53"},{"size":1964,"mtime":1614199935529,"results":"66","hashOfConfig":"53"},{"size":3484,"mtime":1613837627506,"results":"67","hashOfConfig":"53"},{"size":2177,"mtime":1613648693442,"results":"68","hashOfConfig":"53"},{"size":405,"mtime":1611829576251,"results":"69","hashOfConfig":"53"},{"size":803,"mtime":1610531875309,"results":"70","hashOfConfig":"53"},{"size":3146,"mtime":1614201087700,"results":"71","hashOfConfig":"53"},{"size":4987,"mtime":1614195639415,"results":"72","hashOfConfig":"53"},{"size":1943,"mtime":1614006770126,"results":"73","hashOfConfig":"53"},{"size":43,"mtime":1610295231626,"results":"74","hashOfConfig":"53"},{"size":917,"mtime":1613402764934,"results":"75","hashOfConfig":"53"},{"size":1208,"mtime":1612960157498,"results":"76","hashOfConfig":"53"},{"size":37,"mtime":1610806879811,"results":"77","hashOfConfig":"53"},{"size":1732,"mtime":1613993682792,"results":"78","hashOfConfig":"53"},{"size":4383,"mtime":1613837115043,"results":"79","hashOfConfig":"53"},{"size":31,"mtime":1610635323448,"results":"80","hashOfConfig":"53"},{"size":3513,"mtime":1614009270475,"results":"81","hashOfConfig":"53"},{"size":981,"mtime":1611227424023,"results":"82","hashOfConfig":"53"},{"size":4935,"mtime":1614075074045,"results":"83","hashOfConfig":"53"},{"size":1078,"mtime":1612615853947,"results":"84","hashOfConfig":"53"},{"size":5238,"mtime":1614199707061,"results":"85","hashOfConfig":"53"},{"size":691,"mtime":1606326671170,"results":"86","hashOfConfig":"53"},{"size":2022,"mtime":1614069496515,"results":"87","hashOfConfig":"53"},{"size":1295,"mtime":1613379366882,"results":"88","hashOfConfig":"53"},{"size":549,"mtime":1612195322523,"results":"89","hashOfConfig":"53"},{"size":10452,"mtime":1614190504362,"results":"90","hashOfConfig":"53"},{"size":43,"mtime":1612372825483,"results":"91","hashOfConfig":"53"},{"size":15279,"mtime":1614189780124,"results":"92","hashOfConfig":"53"},{"size":571,"mtime":1613655477597,"results":"93","hashOfConfig":"53"},{"size":4560,"mtime":1614189459806,"results":"94","hashOfConfig":"53"},{"size":660,"mtime":1614072449945,"results":"95","hashOfConfig":"53"},{"size":559,"mtime":1614072341446,"results":"96","hashOfConfig":"53"},{"size":3458,"mtime":1614189967482,"results":"97","hashOfConfig":"53"},{"size":4192,"mtime":1614073989188,"results":"98","hashOfConfig":"53"},{"size":6072,"mtime":1614008252482,"results":"99","hashOfConfig":"53"},{"size":4791,"mtime":1614169679106,"results":"100","hashOfConfig":"53"},{"size":849,"mtime":1614167145592,"results":"101","hashOfConfig":"53"},{"size":5397,"mtime":1614187509836,"results":"102","hashOfConfig":"53"},{"size":1960,"mtime":1614012824157,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1lrwrja",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\index.js",[],["215","216"],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\App.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\TrellerApp\\TrellerApp.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\MainHeader\\MainHeader.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardPreview\\index.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardPreview\\CardPreview.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\userSercvice.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\index.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\cardService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\eventBusService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardComments\\CardComments.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\ListPreview\\ListPreview.jsx",["217"],"import { useEffect, useRef, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { AddCard } from '../AddCard/AddCard';\nimport { CardPreview } from '../CardPreview';\n\nimport './ListPreview.scss';\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    // change background colour if dragging\n    background: isDragging ? '' : '#ebecf0',\n    // styles we need to apply on draggables\n    ...draggableStyle,\n});\n\nexport function ListPreview(props) {\n    const { list, listIdx, board } = props;\n\n    const [listToEdit, updateListToEdit] = useState(list);\n    const [isListActionOpen, toggleListAction] = useState(false);\n    const listTitleRef = useRef(null);\n    const node = useRef();\n\n    const prevList = usePrevious(list);\n    useEffect(() => {\n        if (prevList) {\n            if (prevList !== list) {\n                updateListToEdit(list);\n            }\n        }\n    }, [list])\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const handleClick = e => {\n        if (node.current) {\n            if (node.current.contains(e.target)) {\n                return;\n            }\n        }\n        toggleListAction(false)\n    };\n\n    const onEnterPress = (ev) => {\n        if (ev.keyCode === 13 && ev.shiftKey === false) {\n            ev.preventDefault();\n            updateListTitle(ev);\n        }\n    }\n\n    const updateListTitle = (ev) => {\n        ev.preventDefault();\n        props.updateListTitle(listIdx, listToEdit.title);\n        listTitleRef.current.blur();\n    }\n\n    const onDeleteList = () => {\n        props.deleteList(list._id);\n        toggleListAction(false);\n    }\n\n    // CARD //\n    const addCard = (card) => {\n        props.addCard(list._id, listIdx, card)\n    }\n\n    const deleteCard = (cardId) => {\n        props.deleteCard(listIdx, cardId);\n    }\n\n    const updateCardTitle = (cardId, cardTitle) => {\n        props.updateCardTitle(cardId, cardTitle);\n    }\n\n    return (\n        <section className=\"list-preview\">\n           {(list && listToEdit) && <div>\n             {!board.isTemplate ? <form className=\"list-title-form\">\n                <textarea ref={listTitleRef} className=\"list-title-textarea\" name=\"title\" value={listToEdit.title}\n                    onChange={(ev) => updateListToEdit({...listToEdit, [ev.target.name]:ev.target.value})} onKeyDown={onEnterPress}\n                    onBlur={updateListTitle}>\n                </textarea>\n            </form>\n            :<div className=\"list-title-textarea\">{listToEdit.title}</div> }\n            </div>}\n            <div ref={node}>\n            <button onClick={() => toggleListAction(!isListActionOpen)} className=\"list-menu-icon\"><i className=\"fas fa-ellipsis-h\"></i></button>\n            {isListActionOpen && <div className=\"list-actions\">\n                <button className=\"close-btn\" onClick={() => toggleListAction(false)}><i className=\"fas fa-times\"></i></button>\n                <p>List Actions</p>\n                <ul>\n                    <li onClick={onDeleteList}>Delete List</li>\n                </ul>\n            </div>}\n            </div>\n            {(list.cards && list.cards.length > 0) && <div>\n                {list.cards.map((card, idx) => {\n                    return (\n                        <Draggable draggableId={card._id} key={card._id} index={idx}>\n                            {(provided, snapshot) => (\n                                <div className=\"card\"\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}\n                                >\n                                    <CardPreview\n                                        card={card}\n                                        board={board}\n                                        key={card._id}\n                                        deleteCard={deleteCard}\n                                        updateCardTitle={updateCardTitle}\n                                        copyCard={addCard} />\n                                </div>\n                            )}\n                        </Draggable>\n                    )\n                })}\n            </div>}\n           {!board.isTemplate &&  <AddCard addCard={addCard} />}\n        </section >\n    )\n}\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\AddCard\\AddCard.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\ListPreview\\index.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\authActions.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\authService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\HomePage\\index.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\UserProfile\\UserProfile.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\Login\\index.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\Login\\Login.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\HttpService.js",["218"],"import Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/api/' :\r\n    '//localhost:4000/api/'\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            this.props.history.push('/');\r\n        }\r\n        console.log(`Had issues ${method}ing to server`, err)\r\n        throw err;\r\n    }\r\n}",["219","220"],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\Filter\\Filter.jsx",["221"],"import { connect } from 'react-redux';\nimport { getCardSearchResult } from './../../store/actions/searchActions';\nimport { getBoardById } from './../../store/actions/boardActions';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CardPreview } from './../CardPreview/CardPreview';\nimport { useEffect, useRef, useState } from 'react';\n\nimport './Filter.scss';\n\nexport function _Filter(props) {\n    const location = useLocation();\n    const [filterBy, setFilterBy] = useState({ txt: '' });\n    const [searchResult, setSearchResult] = useState([]);\n    const [isSearch, toggleIsSearch] = useState(false)\n    const [isFormOpen, toggleForm] = useState(false);\n    const [listTitle, setListTitle] = useState('');\n    const [boardTitle, setBoardTitle] = useState('');\n    const node = useRef();\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n          document.removeEventListener(\"mousedown\", handleClick);\n        };\n      }, []);\n\n      const handleClick = e => {\n        if (node.current.contains(e.target)) {\n          return;\n        }\n       toggleForm(false)\n      };\n\n    const setFilter = async (ev) => {\n        ev.preventDefault();\n        debugger\n        if (!filterBy.txt || filterBy.txt.length < 0) return;\n        let results = await props.getCardSearchResult(filterBy);\n        setSearchResult(results);\n        toggleIsSearch(true);\n        if (results) {\n            results.forEach(async (result) => {\n                let board = await props.getBoardById(result.createdBy.boardId);\n                let list = board.lists.find(list => {\n                    return list._id === result.createdBy.listId;\n                })\n                setBoardTitle(board.title);\n                setListTitle(list.title);\n            })\n        }\n    }\n\n    // useEffect(() => {\n    //     setFilterBy(filterBy)\n    //     return () => {\n    //         setFilterBy({ txt: '' })\n    //     }\n    // })\n\n    const closeForm = () => {\n        toggleForm(false);\n        setFilterBy({ txt: '' })\n    }\n\n    const isBoardMember = (boardId) => {\n        const isMember = props.user.boardsMember.some(board => {\n            return board._id === boardId;\n        })\n        return isMember;\n    }\n\n    return (\n        <section ref={node} className=\"filter\">\n            <form onSubmit={setFilter}>\n                <input type=\"search\" className=\"search-input\" name=\"txt\" value={filterBy.txt}\n                    onChange={(ev) => setFilterBy({ ...filterBy, [ev.target.name]: ev.target.value })} \n                    onFocus={() => toggleForm(true)} onBlur={closeForm} />\n                {!isFormOpen && <button type=\"button\" className=\"search-btn\"><i className=\"fa fa-search\"></i></button>}\n            </form>\n            {isFormOpen && <div className=\"search-tab pop-up\" >\n                <button onClick={closeForm} className=\"close-btn\"><i className=\"fas fa-times\"></i></button>\n                <p className=\"headline\">Search Results</p>\n                {isSearch &&\n                    <div className=\"flex justify-center\">\n                        {(searchResult && searchResult.length > 0) ? <ul>\n                            {searchResult.map(result => {\n                                if (!isBoardMember(result.createdBy.boardId)) return;\n                                return (\n                                    <li key={result._id} className=\"flex align-center\">\n                                        <div className=\"card-preview-search\">\n                                            <CardPreview card={result} isSearch={true} />\n                                        </div>\n                                        <Link to={{\n                                            pathname: `/treller/card/${result._id}`,\n                                            state: { background: location }\n                                        }}>\n                                            <h4 className=\"card-name\">{result.title}</h4>\n                                            <p className=\"list-board-name\">\n                                                In <span className=\"bold\">{listTitle} </span>\n                                                    On <span className=\"bold\">{boardTitle}</span>\n                                            </p>\n                                        </Link>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                            : <span className=\"no-result-msg\">We couldn't find any cards or boards that matched your search.</span>}\n                    </div>}\n            </div>}\n        </section>\n    )\n}\n\nconst mapDispatchToProps = {\n    getCardSearchResult,\n    getBoardById\n}\nexport const Filter = connect(null, mapDispatchToProps)(_Filter)","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\BoardHeader\\BoardHeader.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\img-upload-service.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\AddList\\AddList.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardEditModal\\CardEditModal.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\socketService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\Boards\\Boards.jsx",["222"],"import { Component } from 'react';\nimport { MainHeader } from '../../cmps/MainHeader/MainHeader';\nimport Template1 from './../../assets/templates/bgc-small1.jpg';\nimport Template2 from './../../assets/templates/bgc-small2.jpg';\nimport Template3 from './../../assets/templates/bgc-small3.jpg';\nimport Template4 from './../../assets/templates/bgc-small4.jpg';\n\nimport { connect } from 'react-redux';\nimport { getLoggedInUser } from '../../store/actions/authActions';\nimport { addBoard, getBoardForBoardPage } from '../../store/actions/boardActions';\nimport { Link } from 'react-router-dom';\n\nimport './Boards.scss';\nimport Avatar from 'react-avatar';\nimport { boardService } from '../../services/boardService';\nimport { eventBus } from '../../services/eventBusService';\nimport { socketService } from '../../services/socketService';\n\nexport class _Boards extends Component {\n\n    state = {\n        favoriteBoards: [],\n        boardsMember: []\n    }\n\n    async componentDidMount() {\n        await this.props.getLoggedInUser();\n        this.getBoardsForDisplay();\n        this.getFavBoardsForDisplay();\n\n        const { user } = this.props;\n        socketService.setup();\n        socketService.emit('register user', user._id);\n        socketService.on('newUserNotification', (userId) => {\n            this.loadUser()\n        })\n        socketService.on('updateUser', (userId) => {\n            this.loadUser()\n        })\n        \n        eventBus.on('loadUser', ()=>{\n            this.loadUser();\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.user !== this.props.user) {\n            this.getBoardsForDisplay();\n            this.getFavBoardsForDisplay();\n        }\n    }\n\n    loadUser = async () =>{\n        await this.props.getLoggedInUser();\n    }\n\n    // Why it stops after add board? //\n    addBoard = async () => {\n        const boardToAdd = boardService.getEmptyBoard();\n        const board = await this.props.addBoard(boardToAdd);\n        eventBus.emit('onSetBoard', board._id);\n        this.props.history.push(`/treller/board/${board._id}`);\n    }\n\n    getBoardsForDisplay = async () => {\n        let { user } = this.props;\n        if (user) {\n            if (user.boardsMember && user.boardsMember.length > 0) {\n                let boards = await Promise.all(user.boardsMember.map(async (boardId) => {\n                    return boardId = await this.props.getBoardForBoardPage(boardId);\n                }))\n                this.setState({ boardsMember: boards })\n            }\n        }\n    }\n\n    getFavBoardsForDisplay = async () => {\n        let { user } = this.props;\n        if (user) {\n            if (user.favoriteBoards && user.favoriteBoards.length > 0) {\n                let boards = await Promise.all(user.favoriteBoards.map(async (boardId) => {\n                    return boardId = await this.props.getBoardForBoardPage(boardId);\n                }))\n                this.setState({ favoriteBoards: boards })\n            }\n        }\n    }\n\n    render() {\n        const { user } = this.props;\n        const { favoriteBoards, boardsMember } = this.state;\n        const templates = [\n            {\n                name: 'Nature', boardId: \"5ff1b13c36eed552e70fec47\",\n                smallImg: Template1, largImg: \"https://res.cloudinary.com/druhd0ddz/image/upload/v1612278509/treller/bgc-large1_kxtkq8.jpg\"\n            },\n            {\n                name: 'Animals', boardId: \"60040605a5297b5978123a93\",\n                smallImg: Template2, largImg: \"https://res.cloudinary.com/druhd0ddz/image/upload/v1612278509/treller/bgc-large4_b6g9p0.jpg\"\n            },\n            {\n                name: 'Work', boardId: \"600432fba5297b59781ba1d4\",\n                smallImg: Template3, largImg: \"https://res.cloudinary.com/druhd0ddz/image/upload/v1613425888/treller/bgc-large3_hxzpue.jpg\"\n            },\n            {\n                name: 'Relax', boardId: \"60197399331a92cde9ce9f7d\",\n                smallImg: Template4, largImg: \"https://res.cloudinary.com/druhd0ddz/image/upload/v1612278509/treller/bgc-large2_zr62xq.jpg\"\n            }\n        ];\n\n        return (\n            <section>\n                {user && <MainHeader isUserPage={true} user={user} />}\n                {user && <section className=\"boards container\">\n                    <div className=\"boards-container\">\n                        <div className=\"flex justify-center align-center\"><i className=\"fas fa-columns\"></i><h2>Treller Templates</h2></div>\n                        <p className=\"template-info\"><span className=\"bold\">Create your own board with our new template.</span>\n                            <br /> Manage and monitoring your board, easily with Treller Templates! </p>\n                        <ul className=\"flex justify-center flex-wrap\">\n                            {templates.map(template => {\n                                return (\n                                    <Link to={`/treller/board/${template.boardId}`} className=\"template-img\" style={{ backgroundImage: `url(${template.smallImg})` }}\n                                        key={template.name}>\n                                        <span>Template</span>\n                                        <h2 className=\"template-name\">{template.name}</h2>\n                                    </Link>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"user-boards-container\">\n                        {(user.favoriteBoards && user.favoriteBoards.length > 0) && <div className=\"boards-container\">\n                            <div className=\"flex justify-center align-center\"><i className=\"far fa-star\"></i><h2>Starred Boards</h2></div>\n                            <div className=\"starred-boards flex justify-center flex-wrap\">\n                                {favoriteBoards.map(board => {\n                                    return (\n                                        <Link to={`/treller/board/${board._id}`} key={board._id}\n                                            className=\"board-link flex column space-between\"\n                                            style={{\n                                                backgroundColor: board.style.backgroundColor ? board.style.backgroundColor : ''\n                                                , backgroundImage: board.style.backgroundImg ? `url(${board.style.backgroundImg})` : ''\n                                            }}>\n                                            {board.title}\n                                            <div className=\"flex space-between\">\n                                                <button className=\"fav-board\"><i style={{ color: \"#f2d600\" }} className=\"far fa-star\"></i></button>\n                                                <div className=\"flex flex-end\">\n                                                    {board.members.map(member => {\n                                                        return (\n                                                            <Avatar name={member.fullName} size={20} round={true} key={member._id} />\n                                                        )\n                                                    })}\n                                                </div>\n                                            </div>\n                                        </Link>\n                                    )\n                                })}\n                            </div>\n                        </div>}\n                        <div className=\"boards-container\">\n                            <div className=\"flex justify-center align-center\"><i className=\"fab fa-trello\"></i><h2>Your Boards</h2></div>\n                            <div className=\"flex justify-center\">\n                                {(user.boardsMember && user.boardsMember.length > 0) &&\n                                    <div className=\"other-boards flex justify-center flex-wrap\">\n                                        {boardsMember.map(board => {\n                                            if (!board.style) return;\n                                                return (\n                                                    <Link to={`/treller/board/${board._id}`} key={board._id}\n                                                        className=\"board-link flex column space-between\"\n                                                        style={{\n                                                            backgroundColor: board.style.backgroundColor ? board.style.backgroundColor : '',\n                                                            backgroundImage: board.style.backgroundImg ? `url(${board.style.backgroundImg})` : ''\n                                                        }}>\n                                                        {board.title}\n                                                        <div className=\"flex flex-end\">\n                                                            {board.members.map(member => {\n                                                                return (\n                                                                    <Avatar name={member.fullName} size={20} round={true} key={member._id} />\n                                                                )\n                                                            })}\n                                                        </div>\n                                                    </Link>\n                                                )\n                                        })}\n                                    </div>}\n                                <div className=\"board-link empty flex justify-center align-center\"\n                                    onClick={this.addBoard}>\n                                    Create new board\n                                        </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>}\n            </section>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.userReducer.loggedInUser,\n        // card: state.cardReducer.currCard,\n        // board: state.boardReducer.currBoard\n    }\n}\nconst mapDispatchToProps = {\n    getLoggedInUser,\n    addBoard,\n    getBoardForBoardPage\n}\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\CardDetails\\index.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\pages\\CardDetails\\CardDetails.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardChecklists\\CardChecklists.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\services\\searchService.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\store\\actions\\searchActions.js",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardDescription\\CardDescription.jsx",["223"],"import { useEffect, useRef, useState } from 'react';\nimport './CardDescription.scss';\n\nexport function CardDescription(props) {\n    const [description, setDescription] = useState(props.description);\n    const [isDescriptionFormShow, toggleDescriptionForm] = useState(false);\n    const [descriptionFormType, changeDescriptionForm] = useState('fake');\n    const node = useRef();\n\n    const prevDesc = usePrevious(props.description);\n    useEffect(() => {\n        if (prevDesc !== props.description) {\n            setDescription(props.description)\n        }\n    }, [props.description])\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const handleClick = e => {\n        if (node.current) {\n            if (node.current.contains(e.target)) {\n                return;\n            }\n        }\n        toggleDescriptionForm(false)\n        changeDescriptionForm('fake')\n    };\n\n    const onUpdateDescription = (ev) => {\n        ev.preventDefault();\n        props.updateDescription(description);\n        toggleDescriptionForm(false);\n        changeDescriptionForm('fake');\n    }\n\n    const openDescriptionForm = () => {\n        toggleDescriptionForm(true);\n        changeDescriptionForm('textarea');\n    }\n\n    const closeDescriptionForm = () => {\n        toggleDescriptionForm(false);\n        changeDescriptionForm('fake');\n    }\n\n    return (\n        <section className=\"description-container\">\n            <div className=\"headline flex align-center\">\n                <i className=\"fas fa-align-left icon\"></i>\n                <h3>Description</h3>\n                {(description && !isDescriptionFormShow && !props.board.isTemplate) &&\n                    <button className=\"card-details-btn edit\"\n                        onClick={() => openDescriptionForm()}>\n                        Edit\n                        </button>}\n            </div>\n            {!props.board.isTemplate ? <form ref={node} className=\"description-form\"\n                onSubmit={(ev) => onUpdateDescription(ev)}>\n                <textarea\n                    onClick={() => openDescriptionForm()}\n                    // onBlur={() => toggleDescriptionForm(false)}\n                    className={`description ${description ? 'value' : ''} ${descriptionFormType}`}\n                    placeholder=\"Add more detailed description...\"\n                    onChange={ev => setDescription(ev.target.value)}\n                    value={description}\n                    name=\"description\">\n                </textarea>\n                <br />\n                {(descriptionFormType === 'textarea') &&\n                    <div className=\"btn flex justify-start\">\n                        <button className=\"add-form-btn\">Save</button>\n                        <button className=\"exit-btn\"\n                            onClick={() => closeDescriptionForm(false)}>\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    </div>}\n            </form>\n                : <div className=\"description-form description value fake\">{description}</div>}\n        </section>\n    )\n}\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\n","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\InviteMembers\\InviteMembers.jsx",["224"],"import { useEffect, useRef, useState } from 'react';\nimport Avatar from 'react-avatar';\nimport { connect } from 'react-redux';\nimport { getUserSearchResult } from '../../store/actions/searchActions';\n\nimport './InviteMembers.scss';\n\nfunction _InviteMembers(props) {\n    const [filter, setFilter] = useState({ txt: '' });\n    const [isInvitePopUpOpen, togglePopUp] = useState(false);\n    const [searchResult, setSearchResult] = useState([])\n    const [onForm, toggleOnForm] = useState(false);\n    const [onSearch, toggleOnSearch] = useState(false);\n\n    const node = useRef();\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const handleClick = e => {\n        if (node.current.contains(e.target)) {\n            return;\n        }\n        togglePopUp(false);\n        setFilter({txt: ''})\n    };\n\n    const filterUsers = async (ev) => {\n        if (ev) ev.preventDefault();\n        if (!filter.txt || filter.txt.length < 0) return;\n        const res = await props.getUserSearchResult(filter);\n        setSearchResult(res);\n        toggleOnSearch(true);\n    }\n\n    const onInviteMember = (member) => {\n        if (isMember(member._id)) return;\n        togglePopUp(false);\n        props.inviteMemberToBoard(member);\n    }\n\n    const isMember = (userId) => {\n        const { board } = props;\n        const isMember = board.members.some(member => {\n            return member._id === userId\n        })\n        return isMember;\n    }\n\n    const isUser = (userId) => {\n        const { user } = props;\n        if (user._id === userId) return true;\n        else return false;\n    }\n\n    return (\n        <section ref={node} className=\"invite-container\" >\n            <button onClick={() => togglePopUp(!isInvitePopUpOpen)} className=\"board-header-icon invite-btn\">Invite</button>\n            { isInvitePopUpOpen && <div className=\"invite pop-up\">\n                <button onClick={() => togglePopUp(false)} className=\"close-btn\"><i className=\"fas fa-times\"></i></button>\n                <p className=\"headline\">Invite</p>\n                <form onSubmit={(ev)=>filterUsers(ev)} className=\"invite-form\">\n                    <input className=\"invite-search\" type=\"search\" name=\"txt\"\n                        onChange={(ev) => setFilter({ ...filter, [ev.target.name]: ev.target.value })}\n                        onKeyUp={filterUsers} value={filter.txt}\n                        placeholder=\"Enter full name or user name\" onFocus={() => toggleOnForm(true)}\n                        onBlur={() => toggleOnForm(false)} />\n                    {!onForm && <button type=\"button\" className=\"search-btn\">\n                        <i className=\"fa fa-search search-icon\"></i>\n                    </button>}\n                </form>\n                {onSearch && <div>\n                    {(searchResult && searchResult.length > 0) ?\n                        <ul className=\"result-container\">\n                            {searchResult.map(user => {\n                                if (isUser(user._id)) return;\n                                return (\n                                    <li onClick={() => onInviteMember(user)}\n                                        className={`flex align-center ${isMember(user._id) ? 'already-member' : ''}`}\n                                        title={`${isMember(user._id) ? 'This user is already a member in this board' : ''}`}\n                                        key={user._id}>\n                                        <Avatar name={user.fullName} size={20} round={true} />\n                                        <span className=\"user-name\">{user.fullName}</span>\n                                    </li>)\n                            })}\n                        </ul>\n                        : <p>We couldnt fount any match...</p>}\n                </div>}\n            </div>}\n        </section>\n    )\n}\n\nconst mapDispatchToProps = {\n    getUserSearchResult\n}\n\nexport const InviteMembers = connect(null, mapDispatchToProps)(_InviteMembers)","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\CardOptions\\CardOptions.jsx",["225"],"import { useEffect, useRef, useState } from 'react';\nimport Avatar from 'react-avatar';\n\nimport './CardOptions.scss';\n\n\nexport function CardOptions(props) {\n    const [checklist, newChecklist] = useState({ title: '', todos: [] });\n    const [date, setDate] = useState(props.card.dueDate);\n    const { type, board, card } = props;\n    const node = useRef();\n\n    useEffect(() => {\n        // add when mounted\n        document.addEventListener(\"mousedown\", handleClick);\n        // return function to be called when unmounted\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick);\n        };\n    }, []);\n\n    const handleClick = e => {\n        if (node.current.contains(e.target)) {\n            return;\n        }\n        props.closePopUp();\n\n    };\n\n    const closePopUp = () => {\n        props.closePopUp();\n    }\n\n    const isMember = (userId) => {\n        const isMember = card.members.some(member => {\n            return member._id === userId;\n        })\n        return isMember;\n    }\n\n    const addMember = (member)=>{\n        if(isMember(member._id)) return;\n        props.func(member);\n    }\n\n    return (\n        <div ref={node} className=\"card-options\">\n            <button className=\"close-btn\" onClick={closePopUp}><i className=\"fas fa-times\"></i></button>\n            {type === 'Cover' && <div className=\"covers\">\n                <p className=\"headline-option\">{props.type}</p>\n                <p>Colors</p>\n                <ul className=\"flex wrap justify-center\">\n                    <li className=\"cover color green\" onClick={() => props.func({ color: 'green' })}></li>\n                    <li className=\"cover color yellow\" onClick={() => props.func({ color: 'yellow' })}></li>\n                    <li className=\"cover color orange\" onClick={() => props.func({ color: 'orange' })}></li>\n                    <li className=\"cover color red\" onClick={() => props.func({ color: 'red' })}></li>\n                    <li className=\"cover color purple\" onClick={() => props.func({ color: 'purple' })}></li>\n                    <li className=\"cover color blue\" onClick={() => props.func({ color: 'blue' })}></li>\n                    <li className=\"cover color pink\" onClick={() => props.func({ color: 'pink' })}></li>\n                </ul>\n                <p>Pictures</p>\n                <ul className=\"flex wrap justify-center\">\n                    <li className=\"cover pic pic1\" onClick={() => props.func({ picture: 'pic1' })}></li>\n                    <li className=\"cover pic pic2\" onClick={() => props.func({ picture: 'pic2' })}></li>\n                    <li className=\"cover pic pic3\" onClick={() => props.func({ picture: 'pic3' })}></li>\n                    <li className=\"cover pic pic4\" onClick={() => props.func({ picture: 'pic4' })}></li>\n                    <li className=\"cover pic pic5\" onClick={() => props.func({ picture: 'pic5' })}></li>\n                    <li className=\"cover pic pic6\" onClick={() => props.func({ picture: 'pic6' })}></li>\n                    <li className=\"cover pic pic7\" onClick={() => props.func({ picture: 'pic7' })}></li>\n                </ul>\n            </div>}\n            {type === 'Members' && <div className=\"members-container\">\n                <p className=\"headline-option\">{type}</p>\n                <p className=\"add-members-info\">Add members to card:</p>\n                {board.members && <ul>\n                    {board.members.map(member => {\n                        return (\n                            <li onClick={() => addMember(member)}\n                                className={`member flex align-center ${isMember(member._id) ? 'already-member' : ''}`} key={member._id}\n                                title={`${isMember(member._id) ? 'This user is already a member in this card' : ''}`}>\n                                <Avatar className=\"avatar-logo\" name={member.fullName} round={true}\n                                    size={30} />\n                                {member.fullName}\n                            </li>)\n                    })}\n                </ul>}\n            </div>}\n            {type === 'Labels' && <div className=\"labels-container\">\n                <p className=\"headline-option\">{props.type}</p>\n                <div className=\"labels\">\n                    <ul className=\"flex column align-center\">\n                        <li className=\"label green\" onClick={() => props.func('green')}></li>\n                        <li className=\"label yellow\" onClick={() => props.func('yellow')}></li>\n                        <li className=\"label orange\" onClick={() => props.func('orange')}></li>\n                        <li className=\"label red\" onClick={() => props.func('red')}></li>\n                        <li className=\"label purple\" onClick={() => props.func('purple')}></li>\n                        <li className=\"label blue\" onClick={() => props.func('blue')}></li>\n                    </ul>\n                </div>\n            </div>}\n            {type === 'Checklists' && <div className=\"checklists-container\">\n                <p className=\"headline-option\">{props.type}</p>\n                <form onSubmit={(ev) => props.func(ev, checklist)}>\n                    <input type=\"text\" name=\"title\" value={checklist.title} className=\"checklist-add-input\"\n                        onChange={(ev) => newChecklist({ ...checklist, [ev.target.name]: ev.target.value })}\n                        placeholder=\"Add Checklist\" />\n                    <br />\n                    <button className=\"save-btn\">Add</button>\n                </form>\n            </div>}\n            {type === 'Due Date' && <div className=\"due-date-form\">\n                <p className=\"headline-option\">{props.type}</p>\n                <form onSubmit={(ev) => props.func(ev, date)}>\n                    <input type=\"datetime-local\" value={date} name=\"dueDate\"\n                        onChange={(ev) => setDate(ev.target.value)} />\n                    <br />\n                    <button className=\"save-btn\">Add</button>\n                </form>\n            </div>}\n        </div>)\n}","C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\Notifications\\Notifications.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\NotificiationMsg\\NotificiationMsg.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\BoardMenu\\BoardMenu.jsx",[],"C:\\Users\\Karin\\Desktop\\WEB\\Treller\\frontend\\src\\cmps\\AvatarOptions\\AvatarOptions.jsx",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":32,"column":8,"nodeType":"232","endLine":32,"endColumn":14,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":10,"column":1,"nodeType":"236","endLine":23,"endColumn":2},{"ruleId":"226","replacedBy":"237"},{"ruleId":"228","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":89,"column":79,"nodeType":"241","messageId":"242","endLine":89,"endColumn":86},{"ruleId":"239","severity":1,"message":"240","line":165,"column":63,"nodeType":"241","messageId":"242","endLine":165,"endColumn":70},{"ruleId":"230","severity":1,"message":"243","line":15,"column":8,"nodeType":"232","endLine":15,"endColumn":27,"suggestions":"244"},{"ruleId":"239","severity":1,"message":"240","line":82,"column":55,"nodeType":"241","messageId":"242","endLine":82,"endColumn":62},{"ruleId":"230","severity":1,"message":"245","line":20,"column":8,"nodeType":"232","endLine":20,"endColumn":10,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prevList'. Either include it or remove the dependency array.","ArrayExpression",["249"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["247"],["248"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'prevDesc'. Either include it or remove the dependency array.",["250"],"React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [list, prevList]",{"range":"258","text":"259"},"Update the dependencies array to be: [prevDesc, props.description]",{"range":"260","text":"261"},"Update the dependencies array to be: [handleClick]",{"range":"262","text":"263"},[995,1001],"[list, prevList]",[562,581],"[prevDesc, props.description]",[633,635],"[handleClick]"]